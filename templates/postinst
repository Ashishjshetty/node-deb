#!/bin/bash
# This file was autogenerated by node-deb {{ node_deb_version }}
set -e

init_type='{{ node_deb_init }}'

die() {
  echo "$@" >&2
  exit 1
}

addUser() {
  local user="$1"

  local uid="$2"
  if [ -z "$uid" ]; then
    local uid_flags=""
  else
    local uid_flags="--uid $uid"
  fi

  local group=${3:-$user}
  local descr=${4:-No description}
  local shell=${5:-/bin/false}

  if ! getent passwd | grep -q "^$user:"; then
    echo "Creating system user: $user in $group with $descr and shell $shell"
    useradd $uid_flags --gid $group --no-create-home --system --shell $shell -c "$descr" $user
  fi
}

addGroup() {
  local group="$1"
  local gid="$2"
  if [ -z "$gid" ]; then
    local gid_flags=""
  else
    local gid_flags="--gid $gid"
  fi

  if ! getent group | grep -q "^$group:" ; then
    echo "Creating system group: $group"
    groupadd $gid_flags --system $group
  fi
}

start_service () {
  local service_name="$1"

  if hash service 2> /dev/null; then
    service "$service_name" start || echo "${service_name} could not be registered or started"
  elif hash start 2> /dev/null; then
    start "$service_name" || echo "${service_name} could not be registered or started"
  elif hash systemctl 2> /dev/null; then
    {
      systemctl enable "$service_name.service" && \
      systemctl start "$service_name.service"
    } || echo "${service_name} could not be registered or started"
  else
    die 'Your system does not appear to use upstart or systemd, so the service could not be started'
  fi
}

addGroup {{ node_deb_group }} ''
addUser {{ node_deb_user }} '' {{ node_deb_group }} '{{ node_deb_user }} user-daemon' '/bin/false'

if ! [ -d '/var/log/{{ node_deb_package_name }}' ]; then
  mkdir -p '/var/log/{{ node_deb_package_name }}'
fi

chown {{ node_deb_user }}:{{ node_deb_group }} /var/log/{{ node_deb_package_name }}

if [[ "$init_type" == 'auto' ]]; then
  start_service '{{ node_deb_package_name }}'
fi
